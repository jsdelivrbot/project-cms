{"version":3,"sources":["combineReducers.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAQA,IAAI,WAAW,YAAA;IACX,WAAW,YAAA;IACX,QAAQ,YAAA;;;;;;AAAC,AAMb,WAAW,GAAG,UAAC,GAAG,EAAK;AACnB,WAAO,gBAAE,KAAK,CAAC,GAAG,EAAE,gBAAE,aAAa,CAAC,CAAC;CACxC;;;;;;AAAC,AAMF,WAAW,GAAG,UAAC,GAAG,EAAK;AACnB,WAAO,gBAAE,KAAK,CAAC,GAAG,EAAE,gBAAE,UAAU,CAAC,CAAC;CACrC;;;;;;;;;;AAAC,AAUF,QAAQ,GAAG,UAAC,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAK;AAC/C,QAAI,SAAS,YAAA,CAAC;;AAEd,QAAI,CAAC,oBAAU,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;AACxC,cAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;KACxE;;AAED,aAAS,GAAG,MAAM;;;;AAAC,AAInB,oBAAE,OAAO,CAAC,UAAU,EAAE,UAAC,KAAK,EAAE,UAAU,EAAK;;;AAGzC,YAAI,WAAW,CAAC,KAAK,CAAC,EAAE;;;AAGpB,gBAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;AACpB,oBAAI,MAAM,YAAA,CAAC;;AAEX,sBAAM,CAAC,eAAe,GAAG,IAAI,CAAC;;AAE9B,sBAAM,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,MAAM,CAAC,CAAC;;AAE/D,oBAAI,CAAC,oBAAU,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;AACxC,0BAAM,IAAI,KAAK,CAAC,0DAA0D,GAAG,UAAU,GAAG,YAAY,GAAG,MAAM,CAAC,IAAI,GAAG,8BAA8B,WAAU,MAAM,yCAAN,MAAM,EAAA,GAAG,IAAI,CAAC,CAAC;iBACjL;;AAED,yBAAS,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;aACjD;SACJ,MAAM,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE;AAC3B,qBAAS,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,oBAAU,GAAG,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;SACxH;KACJ,CAAC,CAAC;;AAEH,WAAO,SAAS,CAAC;CACpB;;;;;;AAAC;kBAMa,UAAC,OAAO,EAAK;AACxB,8CA3EA,eAAe,EA2EC,OAAO,CAAC;;;;;;;AAAC,AAOzB,WAAO,UAAC,KAAK,EAAE,MAAM,EAAK;AACtB,YAAI,QAAQ,YAAA;YACR,MAAM,YAAA,CAAC;;AAEX,YAAI,CAAC,MAAM,EAAE;AACT,kBAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;SAChE;;AAED,YAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;;AAEhD,mBAAO,CAAC,IAAI,CAAC,2BAA2B,GAAG,MAAM,CAAC,IAAI,GAAG,gIAAgI,CAAC;;;AAAC,AAG3L,mBAAO,KAAK,CAAC;SAChB;;AAED,kDAjGJ,cAAc,EAiGK,MAAM,CAAC;;;;AAAC,AAIvB,cAAM,GAAG;AACL,2BAAe,EAAE,KAAK;SACzB,CAAC;;AAEF,gBAAQ,GAAG,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;;AAEpD,YAAI,CAAC,MAAM,CAAC,eAAe,IAAI,MAAM,CAAC,IAAI,KAAK,WAAW,EAAE;;AAExD,mBAAO,CAAC,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,EAAE,MAAM,CAAC;;AAAC,SAEnE;;AAED,eAAO,QAAQ,CAAC;KACnB,CAAC;CACL","file":"combineReducers.js","sourcesContent":["import _ from './utils';\n\nimport Immutable from 'immutable';\nimport {\n    validateReducer,\n    validateAction\n} from 'canonical-reducer-composition-validator';\n\nlet isActionMap,\n    isDomainMap,\n    iterator;\n\n/**\n * @param {Object.<string, Object>} map\n * @return {boolean} If every object property value is a plain object.\n */\nisDomainMap = (map) => {\n    return _.every(map, _.isPlainObject);\n};\n\n/**\n * @param {Object.<string, Function>} map\n * @return {boolean} If every object property value is a function.\n */\nisActionMap = (map) => {\n    return _.every(map, _.isFunction);\n};\n\n/**\n * @param {Object} domain\n * @param {Object} action\n * @param {string} action.name\n * @param {Object} collection\n * @param {Object} tapper\n * @return {Object}\n */\niterator = (domain, action, collection, tapper) => {\n    let newDomain;\n\n    if (!Immutable.Iterable.isIterable(domain)) {\n        throw new Error('Domain must be an instance of Immutable.Iterable.');\n    }\n\n    newDomain = domain;\n\n    // console.log('domain', domain, 'action', action, 'definition', collection);\n\n    _.forEach(collection, (value, domainName) => {\n        // console.log('value', value, 'domain', domainName, 'isActionMap', isActionMap(value), 'isDomainMap', isDomainMap(value));\n\n        if (isActionMap(value)) {\n            // console.log('action.name', action.name, 'value[action.name]', typeof value[action.name]);\n\n            if (value[action.name]) {\n                let result;\n\n                tapper.isActionHandled = true;\n\n                result = value[action.name](newDomain.get(domainName), action);\n\n                if (!Immutable.Iterable.isIterable(result)) {\n                    throw new Error('Reducer must return an instance of Immutable.Iterable. \"' + domainName + '\" domain \"' + action.name + '\" action handler result is \"' + typeof result + '\".');\n                }\n\n                newDomain = newDomain.set(domainName, result);\n            }\n        } else if (isDomainMap(value)) {\n            newDomain = newDomain.set(domainName, iterator(newDomain.get(domainName) || Immutable.Map(), action, value, tapper));\n        }\n    });\n\n    return newDomain;\n};\n\n/**\n * @param {Object} reducer\n * @return {Function}\n */\nexport default (reducer) => {\n    validateReducer(reducer);\n\n    /**\n     * @param {Immutable.Iterable} state\n     * @param {Object} action\n     * @return {Immutable.Iterable}\n     */\n    return (state, action) => {\n        let newState,\n            tapper;\n\n        if (!action) {\n            throw new Error('Action parameter value must be an object.');\n        }\n\n        if (action.type && action.type.indexOf('@@') === 0) {\n            /* eslint-disable no-console */\n            console.info('Ignoring private action \"' + action.type + '\". redux-immutable does not support state inflation. Refer to https://github.com/gajus/canonical-reducer-composition/issues/1.');\n            /* eslint-enable no-console */\n\n            return state;\n        }\n\n        validateAction(action);\n\n        // Tapper is an object that tracks execution of the action.\n        // @todo Make this an opt-in.\n        tapper = {\n            isActionHandled: false\n        };\n\n        newState = iterator(state, action, reducer, tapper);\n\n        if (!tapper.isActionHandled && action.name !== 'CONSTRUCT') {\n            /* eslint-disable no-console */\n            console.warn('Unhandled action \"' + action.name + '\".', action);\n            /* eslint-enable no-console */\n        }\n\n        return newState;\n    };\n};\n"],"sourceRoot":"/source/"}